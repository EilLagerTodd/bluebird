{"version":3,"sources":["fbase.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/AuthForm.js","routes/Auth.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","Nweet","nweetobj","isOwner","useState","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","a","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","prev","onSubmit","event","preventDefault","update","className","onChange","value","target","required","placeholder","autoFocus","type","onClick","src","width","height","icon","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","nweetObj","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","Boolean","readAsDataURL","style","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","newArray","docs","map","document","data","margintop","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","faTwitter","color","size","marginBottom","faGoogle","faGithub","Navigation","display","justifyContent","marginTop","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","signOut","push","AppRouter","isLoggedIn","maxWidth","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7c12d21f.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import { dbService, storageService } from \"fbase\";\r\nimport { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetobj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetobj.text);\r\n\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"삭제를 원해?\");\r\n    if (ok) {\r\n      await dbService.doc(`nweets/${nweetobj.id}`).delete();\r\n      if (nweetobj.attachmentUrl !== \"\")\r\n        await storageService.refFromURL(nweetobj.attachmentUrl).delete();\r\n    }\r\n  };\r\n\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    await dbService.doc(`nweets/${nweetobj.id}`).update({ text: newNweet });\r\n    setEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n            <input\r\n              onChange={onChange}\r\n              value={newNweet}\r\n              required\r\n              placeholder=\"Edit your nweet\"\r\n              autoFocus\r\n              className=\"formInput\"\r\n            />\r\n            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n          </form>\r\n          <button onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetobj.text}</h4>\r\n          {nweetobj.attachmentUrl && (\r\n            <img src={nweetobj.attachmentUrl} width=\"50px\" height=\"50px\" />\r\n          )}\r\n          {isOwner && (\r\n            <div className=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;\r\n","import { dbService, storageService } from \"fbase\";\r\nimport { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (nweet === \"\") {\r\n      return;\r\n    }\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const nweetObj = {\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    await dbService.collection(\"nweets\").add(nweetObj);\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    if (Boolean(theFile)) {\r\n      reader.readAsDataURL(theFile);\r\n    }\r\n  };\r\n\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NweetFactory;\r\n","import { useState, useEffect } from \"react\";\r\nimport { dbService } from \"fbase\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [nweets, setNweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dbService\r\n      .collection(\"nweets\")\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const newArray = snapshot.docs.map((document) => ({\r\n          id: document.id,\r\n          ...document.data(),\r\n        }));\r\n        setNweets(newArray);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <NweetFactory userObj={userObj} />\r\n      <div style={{ margintop: 30 }}>\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n            key={nweet.id}\r\n            nweetobj={nweet}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { authService } from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n\r\n      if (newAccount) {\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value={newAccount ? \"Create Account\" : \"Log In\"}\r\n          className=\"authInput authSubmit\"\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport React, { useState } from \"react\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    const data = await authService.signInWithPopup(provider);\r\n  };\r\n\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;\r\n","import { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n  return (\r\n    <nav>\r\n      <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n          <Link to=\"/\" style={{ marginRight: 10 }}>\r\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to=\"/profile\"\r\n            style={{\r\n              marginLeft: 10,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n            <span style={{ marginTop: 10 }}>\r\n              {userObj.displayName\r\n                ? `${userObj.displayName}의 Profile`\r\n                : \"Profile\"}\r\n            </span>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;","import { authService, dbService } from \"fbase\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({ displayName: newDisplayName });\r\n      refreshUser();\r\n    }\r\n  };\r\n\r\n  /*  const getMyNweets = async () => {\r\n    const nweets = await dbService\r\n      .collection(\"nweets\")\r\n      .where(\"creatorId\", \"==\", userObj.uid)\r\n      .orderBy(\"createdAt\", \"asc\")\r\n      .get();\r\n\r\n    console.log(nweets.docs.map((doc) => doc.data()));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMyNweets();\r\n  }, []); */\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"name\"\r\n          value={newDisplayName}\r\n          autoFocus\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"routes/Home\";\r\nimport Auth from \"routes/Auth\";\r\nimport Navigation from \"./Navigation\";\r\nimport Profile from \"./../routes/Profile\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n  return (\r\n    <Router>\r\n      <div>{isLoggedIn && <Navigation userObj={userObj} />}</div>\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: \"100%\",\r\n              margin: \"0 auto\",\r\n              marginTop: 80,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile refreshUser={refreshUser} userObj={userObj} />\r\n            </Route>\r\n          </div>\r\n        ) : (\r\n          <Route exact path=\"/\">\r\n            <Auth />\r\n          </Route>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import { useEffect, useState } from \"react\";\r\nimport AppRouter from \"components/Router\";\r\nimport { authService } from \"fbase\";\r\n\r\nfunction App() {\r\n  const [init, setInit] = useState(false);\r\n  const [userObj, setUserObj] = useState(null);\r\n\r\n  useEffect(() => {\r\n    authService.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        setUserObj({\r\n          uid: user.uid,\r\n          displayName: user.displayName,\r\n          updateProfile: (args) => user.updateProfile(args),\r\n        });\r\n      } else {\r\n        setUserObj(false);\r\n      }\r\n      setInit(true);\r\n    });\r\n  }, []);\r\n\r\n  const refreshUser = () => {\r\n    const user = authService.currentUser;\r\n    setUserObj({\r\n      uid: user.uid,\r\n      displayName: user.displayName,\r\n      updateProfile: (args) => user.updateProfile(args),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {init ? (\r\n        <AppRouter\r\n          refreshUser={refreshUser}\r\n          isLoggedIn={Boolean(userObj)}\r\n          userObj={userObj}\r\n        />\r\n      ) : (\r\n        \"intializing...\"\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n//<footer>&copy; {new Date().getFullYear()} Nwitter</footer>\r\n//아래에 나오는거\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"components/App\";\r\nimport \"./style.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}