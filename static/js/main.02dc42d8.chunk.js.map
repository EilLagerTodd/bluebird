{"version":3,"sources":["fbase.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/AuthForm.js","routes/Auth.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","Nweet","nweetobj","isOwner","useState","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","a","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","prev","onSubmit","event","preventDefault","update","onChange","value","target","required","type","onClick","src","width","height","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","nweetObj","createdAt","Date","now","creatorId","collection","add","placeholder","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","newArray","docs","map","document","data","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Navigation","to","displayName","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","signOut","push","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","getElementById"],"mappings":"oNAcAA,IAASC,cATc,CACrBC,OAAQC,0CACRC,WAAYD,uCACZE,UAAWF,uBACXG,cAAeH,mCACfI,kBAAmBJ,cACnBK,MAAOL,6CAKF,IAAMM,EAAmBT,IACnBU,EAAcV,IAASW,OACvBC,EAAYZ,IAASa,YACrBC,EAAiBd,IAASe,U,wCCyCxBC,EAzDD,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACzB,EAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAgCF,mBAASF,EAASK,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAAa,uCAAG,sBAAAC,EAAA,0DACTC,OAAOC,QAAQ,oCADN,gCAGZhB,EAAUiB,IAAV,iBAAwBZ,EAASa,KAAMC,SAH3B,UAIa,KAA3Bd,EAASe,cAJK,gCAKVlB,EAAemB,WAAWhB,EAASe,eAAeD,SALxC,2CAAH,qDASbG,EAAgB,kBAAMb,GAAW,SAACc,GAAD,OAAWA,MAS5CC,EAAQ,uCAAG,WAAOC,GAAP,SAAAX,EAAA,6DACfW,EAAMC,iBADS,SAGT1B,EAAUiB,IAAV,iBAAwBZ,EAASa,KAAMS,OAAO,CAAEjB,KAAMC,IAH7C,OAIfF,GAAW,GAJI,2CAAH,sDAOd,OACE,8BACGD,EACC,qCACE,uBAAMgB,SAAUA,EAAhB,UACE,uBAAOI,SAnBA,SAACH,GAChB,IACYI,EACRJ,EADFK,OAAUD,MAEZjB,EAAYiB,IAeuBA,MAAOlB,EAAUoB,UAAQ,IACpD,uBAAOC,KAAK,SAASH,MAAM,oBAE7B,wBAAQI,QAASX,EAAjB,uBAGF,qCACE,6BAAKjB,EAASK,OACbL,EAASe,eACR,qBAAKc,IAAK7B,EAASe,cAAee,MAAM,OAAOC,OAAO,SAEvD9B,GACC,qCACE,wBAAQ2B,QAASpB,EAAjB,0BACA,wBAAQoB,QAASX,EAAjB,iC,QCwBCe,EAvEM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,EAA0B/B,mBAAS,IAAnC,mBAAOgC,EAAP,KAAcC,EAAd,KACA,EAAoCjC,mBAAS,IAA7C,mBAAOkC,EAAP,KAAmBC,EAAnB,KAEMlB,EAAQ,uCAAG,WAAOC,GAAP,qBAAAX,EAAA,yDACfW,EAAMC,iBACFN,EAAgB,GACD,KAAfqB,EAHW,wBAIPE,EAAgBzC,EACnB0C,MACAC,MAFmB,UAEVP,EAAQQ,IAFE,YAEKC,gBANd,SAOUJ,EAAcK,UAAUP,EAAY,YAP9C,cAOPQ,EAPO,gBAQSA,EAASL,IAAIM,iBARtB,OAQb9B,EARa,sBAUT+B,EAAW,CACfzC,KAAM6B,EACNa,UAAWC,KAAKC,MAChBC,UAAWjB,EAAQQ,IACnB1B,iBAda,UAgBTpB,EAAUwD,WAAW,UAAUC,IAAIN,GAhB1B,QAiBfX,EAAS,IACTE,EAAc,IAlBC,4CAAH,sDA8Cd,OACE,uBAAMlB,SAAUA,EAAhB,UACE,uBACEK,MAAOU,EACPX,SA7BW,SAACH,GAChBA,EAAMC,iBACN,IACYG,EACRJ,EADFK,OAAUD,MAEZW,EAASX,IAyBLG,KAAK,OACL0B,YAAY,4BACZC,UAAW,MAEb,uBAAO3B,KAAK,OAAO4B,OAAO,UAAUhC,SA1BnB,SAACH,GACpB,IAGMoC,EADFpC,EADFK,OAAUgC,MAEU,GAChBC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAACC,GAClB,IACmBC,EACfD,EADFE,cAAiBD,OAEnBzB,EAAcyB,IAEhBJ,EAAOM,cAAcR,MAenB,uBAAO7B,KAAK,SAASH,MAAM,UAC1BY,GACC,gCACE,qBAAKP,IAAKO,EAAYN,MAAM,OAAOC,OAAO,SAC1C,wBAAQH,QAhBU,kBAAMS,EAAc,KAgBtC,0BC9BK4B,EAhCF,SAAC,GAAiB,IAAfhC,EAAc,EAAdA,QACd,EAA4B/B,mBAAS,IAArC,mBAAOgE,EAAP,KAAeC,EAAf,KAeA,OAbAC,qBAAU,WACRzE,EACGwD,WAAW,UACXkB,QAAQ,YAAa,QACrBC,YAAW,SAACC,GACX,IAAMC,EAAWD,EAASE,KAAKC,KAAI,SAACC,GAAD,oBACjC9D,GAAI8D,EAAS9D,IACV8D,EAASC,WAEdT,EAAUK,QAEb,IAGD,qCACE,cAAC,EAAD,CAAcvC,QAASA,IACvB,8BACGiC,EAAOQ,KAAI,SAACxC,GAAD,OACV,cAAC,EAAD,CAEElC,SAAUkC,EACVjC,QAASiC,EAAMgB,YAAcjB,EAAQQ,KAFhCP,EAAMrB,aC+CRgE,EAxEE,WACf,MAA0B3E,mBAAS,IAAnC,mBAAO4E,EAAP,KAAcC,EAAd,KACA,EAAgC7E,mBAAS,IAAzC,mBAAO8E,EAAP,KAAiBC,EAAjB,KACA,EAAoC/E,oBAAS,GAA7C,mBAAOgF,EAAP,KAAmBC,EAAnB,KACA,EAA0BjF,mBAAS,IAAnC,mBAAOkF,EAAP,KAAcC,EAAd,KAEM9D,EAAW,SAACH,GAChB,MAEIA,EADFK,OAAU6D,EADZ,EACYA,KAAM9D,EADlB,EACkBA,MAEL,UAAT8D,EACFP,EAASvD,GACS,aAAT8D,GACTL,EAAYzD,IAIVL,EAAQ,uCAAG,WAAOC,GAAP,SAAAX,EAAA,yDACfW,EAAMC,iBADS,UAKT6D,EALS,gCAMEzF,EAAY8F,+BACvBT,EACAE,GARS,sDAWEvF,EAAY+F,2BAA2BV,EAAOE,GAXhD,yEAcbK,EAAS,KAAMI,SAdF,0DAAH,sDAoBd,OACE,qCACE,uBAAMtE,SAAUA,EAAUuE,UAAU,YAApC,UACE,uBACEJ,KAAK,QACL3D,KAAK,OACL0B,YAAY,QACZ3B,UAAQ,EACRF,MAAOsD,EACPvD,SAAUA,EACVmE,UAAU,cAEZ,uBACEJ,KAAK,WACL3D,KAAK,WACL0B,YAAY,WACZ3B,UAAQ,EACRF,MAAOwD,EACPzD,SAAUA,EACVmE,UAAU,cAEZ,uBACE/D,KAAK,SACLH,MAAO0D,EAAa,iBAAmB,SACvCQ,UAAU,yBAEXN,GAAS,sBAAMM,UAAU,YAAhB,SAA6BN,OAEzC,sBAAMxD,QA9BY,kBAAMuD,GAAc,SAACjE,GAAD,OAAWA,MA8BnBwE,UAAU,aAAxC,SACGR,EAAa,UAAY,uBCrCnBS,EA5BF,WACX,IAAMC,EAAa,uCAAG,WAAOxE,GAAP,iBAAAX,EAAA,4DAKP,YAHD6E,EACRlE,EADFK,OAAU6D,MAIVO,EAAW,IAAIrG,EAAiBE,KAAKoG,mBACnB,WAATR,IACTO,EAAW,IAAIrG,EAAiBE,KAAKqG,oBARnB,SAUDtG,EAAYuG,gBAAgBH,GAV3B,yDAAH,sDAanB,OACE,gCACE,cAAC,EAAD,IACA,gCACE,wBAAQjE,QAASgE,EAAeN,KAAK,SAArC,kCAGA,wBAAQ1D,QAASgE,EAAeN,KAAK,SAArC,yCCROW,EAfI,SAAC,GAAiB,IAAfhE,EAAc,EAAdA,QACpB,OACE,8BACE,+BACE,6BACE,cAAC,IAAD,CAAMiE,GAAG,IAAT,oBAEF,6BACE,eAAC,IAAD,CAAMA,GAAG,WAAT,cAAsBjE,EAAQkE,YAA9B,6BCgDKC,EAtDC,SAAC,GAA8B,IAA5BnE,EAA2B,EAA3BA,QAASoE,EAAkB,EAAlBA,YACpBC,EAAUC,cAChB,EAA4CrG,mBAAS+B,EAAQkE,aAA7D,mBAAOK,EAAP,KAAuBC,EAAvB,KAcMtF,EAAQ,uCAAG,WAAOC,GAAP,SAAAX,EAAA,yDACfW,EAAMC,iBACFY,EAAQkE,cAAgBK,EAFb,gCAGPvE,EAAQyE,cAAc,CAAEP,YAAaK,IAH9B,OAIbH,IAJa,2CAAH,sDAsBd,OACE,qCACE,uBAAMlF,SAAUA,EAAhB,UACE,uBACEI,SAjCS,SAACH,GAChB,IACYI,EACRJ,EADFK,OAAUD,MAEZiF,EAAkBjF,IA8BZG,KAAK,OACL0B,YAAY,OACZ7B,MAAOgF,IAET,uBAAO7E,KAAK,SAASH,MAAM,sBAE7B,wBAAQI,QA7CU,WACpBnC,EAAYkH,UACZL,EAAQM,KAAK,MA2CX,yBCvBSC,EAxBG,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,WAAY7E,EAA2B,EAA3BA,QAASoE,EAAkB,EAAlBA,YACxC,OACE,eAAC,IAAD,WACE,8BAAMS,GAAc,cAAC,EAAD,CAAY7E,QAASA,MACzC,cAAC,IAAD,UACG6E,EACC,qCACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,CAAM/E,QAASA,MAEjB,cAAC,IAAD,CAAO8E,OAAK,EAACC,KAAK,WAAlB,SACE,cAAC,EAAD,CAASX,YAAaA,EAAapE,QAASA,SAIhD,cAAC,IAAD,CAAO8E,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,YCyBGC,MA3Cf,WACE,MAAwB/G,oBAAS,GAAjC,mBAAOgH,EAAP,KAAaC,EAAb,KACA,EAA8BjH,mBAAS,MAAvC,mBAAO+B,EAAP,KAAgBmF,EAAhB,KA0BA,OAxBAhD,qBAAU,WACR3E,EAAY4H,oBAAmB,SAACC,GAE5BF,IADEE,GACS,CACT7E,IAAK6E,EAAK7E,IACV0D,YAAamB,EAAKnB,YAClBO,cAAe,SAACa,GAAD,OAAUD,EAAKZ,cAAca,MAKhDJ,GAAQ,QAET,IAYD,mCACGD,EACC,cAAC,EAAD,CACEb,YAbY,WAClB,IAAMiB,EAAO7H,EAAY+H,YACzBJ,EAAW,CACT3E,IAAK6E,EAAK7E,IACV0D,YAAamB,EAAKnB,YAClBO,cAAe,SAACa,GAAD,OAAUD,EAAKZ,cAAca,OASxCT,WAAYW,QAAQxF,GACpBA,QAASA,IAGX,oBCrCRyF,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjD,SAASkD,eAAe,W","file":"static/js/main.02dc42d8.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import { dbService, storageService } from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst Nweet = ({ nweetobj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetobj.text);\r\n\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"삭제를 원해?\");\r\n    if (ok) {\r\n      await dbService.doc(`nweets/${nweetobj.id}`).delete();\r\n      if (nweetobj.attachmentUrl !== \"\")\r\n        await storageService.refFromURL(nweetobj.attachmentUrl).delete();\r\n    }\r\n  };\r\n\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    await dbService.doc(`nweets/${nweetobj.id}`).update({ text: newNweet });\r\n    setEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit}>\r\n            <input onChange={onChange} value={newNweet} required />\r\n            <input type=\"submit\" value=\"Update Nweet\" />\r\n          </form>\r\n          <button onClick={toggleEditing}>Cancel</button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetobj.text}</h4>\r\n          {nweetobj.attachmentUrl && (\r\n            <img src={nweetobj.attachmentUrl} width=\"50px\" height=\"50px\" />\r\n          )}\r\n          {isOwner && (\r\n            <>\r\n              <button onClick={onDeleteClick}>Delete Nweet</button>\r\n              <button onClick={toggleEditing}>Edit Nweet</button>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;\r\n","import { dbService, storageService } from \"fbase\";\r\nimport { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const nweetObj = {\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    await dbService.collection(\"nweets\").add(nweetObj);\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <input\r\n        value={nweet}\r\n        onChange={onChange}\r\n        type=\"text\"\r\n        placeholder=\"너의 생각\"\r\n        maxLength={120}\r\n      />\r\n      <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\r\n      <input type=\"submit\" value=\"Nweet\" />\r\n      {attachment && (\r\n        <div>\r\n          <img src={attachment} width=\"50px\" height=\"50px\" />\r\n          <button onClick={onClearAttachment}>Clear</button>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NweetFactory;\r\n","import { useState } from \"react\";\r\nimport { dbService } from \"fbase\";\r\nimport { useEffect } from \"react/cjs/react.development\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [nweets, setNweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dbService\r\n      .collection(\"nweets\")\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const newArray = snapshot.docs.map((document) => ({\r\n          id: document.id,\r\n          ...document.data(),\r\n        }));\r\n        setNweets(newArray);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <NweetFactory userObj={userObj} />\r\n      <div>\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n            key={nweet.id}\r\n            nweetobj={nweet}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { authService } from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n\r\n      if (newAccount) {\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value={newAccount ? \"Create Account\" : \"Log In\"}\r\n          className=\"authInput authSubmit\"\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import React, { useState } from \"react\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    const data = await authService.signInWithPopup(provider);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AuthForm />\r\n      <div>\r\n        <button onClick={onSocialClick} name=\"google\">\r\n          Continue with Google\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\">\r\n          Continue with Github\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n  return (\r\n    <nav>\r\n      <ul>\r\n        <li>\r\n          <Link to=\"/\">Home</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/profile\"> {userObj.displayName}의 Profile </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import { authService, dbService } from \"fbase\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({ displayName: newDisplayName });\r\n      refreshUser();\r\n    }\r\n  };\r\n\r\n  /*  const getMyNweets = async () => {\r\n    const nweets = await dbService\r\n      .collection(\"nweets\")\r\n      .where(\"creatorId\", \"==\", userObj.uid)\r\n      .orderBy(\"createdAt\", \"asc\")\r\n      .get();\r\n\r\n    console.log(nweets.docs.map((doc) => doc.data()));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMyNweets();\r\n  }, []); */\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"name\"\r\n          value={newDisplayName}\r\n        />\r\n        <input type=\"submit\" value=\"Update Profile\" />\r\n      </form>\r\n      <button onClick={onLogOutClick}>Log Out</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"routes/Home\";\r\nimport Auth from \"routes/Auth\";\r\nimport Navigation from \"./Navigation\";\r\nimport Profile from \"./../routes/Profile\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n  return (\r\n    <Router>\r\n      <div>{isLoggedIn && <Navigation userObj={userObj} />}</div>\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile refreshUser={refreshUser} userObj={userObj} />\r\n            </Route>\r\n          </>\r\n        ) : (\r\n          <Route exact path=\"/\">\r\n            <Auth />\r\n          </Route>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import { useEffect, useState } from \"react\";\r\nimport AppRouter from \"components/Router\";\r\nimport { authService } from \"fbase\";\r\n\r\nfunction App() {\r\n  const [init, setInit] = useState(false);\r\n  const [userObj, setUserObj] = useState(null);\r\n\r\n  useEffect(() => {\r\n    authService.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        setUserObj({\r\n          uid: user.uid,\r\n          displayName: user.displayName,\r\n          updateProfile: (args) => user.updateProfile(args),\r\n        });\r\n      } else {\r\n        setUserObj(false);\r\n      }\r\n      setInit(true);\r\n    });\r\n  }, []);\r\n\r\n  const refreshUser = () => {\r\n    const user = authService.currentUser;\r\n    setUserObj({\r\n      uid: user.uid,\r\n      displayName: user.displayName,\r\n      updateProfile: (args) => user.updateProfile(args),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {init ? (\r\n        <AppRouter\r\n          refreshUser={refreshUser}\r\n          isLoggedIn={Boolean(userObj)}\r\n          userObj={userObj}\r\n        />\r\n      ) : (\r\n        \"intializing...\"\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n//<footer>&copy; {new Date().getFullYear()} Nwitter</footer>\r\n//아래에 나오는거\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"components/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}